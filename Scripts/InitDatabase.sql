#IF LOCAL
#DROP SCHEMA IF EXISTS ProjTest; 
#CREATE SCHEMA ProjTest;
#USE ProjTest;

#IF BLUENOSE
#USE CSID;

DROP TABLE IF EXISTS Feedback;
DROP TABLE IF EXISTS Shift;
DROP TABLE IF EXISTS Recipe;
DROP TABLE IF EXISTS Delivery;
DROP TABLE IF EXISTS Bill_Detail;
DROP TABLE IF EXISTS Menu_Item;
DROP TABLE IF EXISTS Instore_Bill;
DROP TABLE IF EXISTS Seating;
DROP TABLE IF EXISTS Online_Bill;
DROP TABLE IF EXISTS Bill;
DROP TABLE IF EXISTS Stock;
DROP TABLE IF EXISTS Ingredient;
DROP TABLE IF EXISTS Employee;
DROP TABLE IF EXISTS Customer;
DROP TABLE IF EXISTS Employee_Class;
DROP TABLE IF EXISTS Branch;

CREATE TABLE Branch (
	Brch_ID INT(5) NOT NULL UNIQUE,
	Brch_Name VARCHAR(100) NOT NULL,
	PRIMARY KEY(Brch_ID)
);

CREATE TABLE Employee_Class (
	EmpClass_ID INT(5) NOT NULL UNIQUE,
	EmpClass_Rate INT(5)  NOT NULL,
	EmpClass_Desc VARCHAR(100) NOT NULL,
	PRIMARY KEY(EmpClass_ID)
);

CREATE TABLE Employee (
	Emp_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Emp_FName VARCHAR(100) NOT NULL,
 	Emp_LName VARCHAR(100) NOT NULL,
	EmpClass_ID INT(5) NOT NULL,
    	Brch_ID INT(5) NOT NULL,
   	PRIMARY KEY(Emp_ID),
	FOREIGN KEY(EmpClass_ID) REFERENCES Employee_Class(EmpClass_ID),
    	FOREIGN KEY(Brch_ID) REFERENCES Branch(Brch_ID)
);

CREATE TABLE Feedback (
	Fdbck_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Fdbck_Content VARCHAR(1000) NOT NULL, 
	Emp_ID INT(5) NOT NULL,
	Brch_ID INT(5)NOT NULL,
	PRIMARY KEY(Fdbck_ID),
	FOREIGN KEY(Emp_ID) REFERENCES Employee(Emp_ID),
	FOREIGN KEY(Brch_ID) REFERENCES Branch(Brch_ID)
);

CREATE TABLE Shift (
	Shift_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Emp_ID INT(5) NOT NULL,
	Shift_Date DATETIME NOT NULL,
	PRIMARY KEY(Shift_ID),
	FOREIGN KEY(Emp_ID) REFERENCES Employee(Emp_ID)
);

CREATE TABLE Ingredient (
	Ingrdt_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Ingrdt_Name VARCHAR(100) NOT NULL,
	PRIMARY KEY(Ingrdt_ID)
);

CREATE TABLE Menu_Item (
	Item_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Item_Name VARCHAR(100) NOT NULL,
	Item_Cost INT(5) NOT NULL,
	PRIMARY KEY(Item_ID)
);

CREATE TABLE Recipe (
	Rcp_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Ingrdt_ID INT(5) NOT NULL,
	Item_ID INT(5) NOT NULL,
	Rcp_AmountReq INT(5)NOT NULL,
	PRIMARY KEY(Rcp_ID),
	FOREIGN KEY(Ingrdt_ID) REFERENCES Ingredient(Ingrdt_ID),
	FOREIGN KEY(Item_ID) REFERENCES Menu_Item(Item_ID)
);

CREATE TABLE Stock (
	Stck_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Ingrdt_ID INT(5) NOT NULL,
	Brch_ID INT(5) NOT NULL,
	Stck_QOH INT(5)NOT NULL,
	PRIMARY KEY(Stck_ID),
	FOREIGN KEY(Ingrdt_ID) REFERENCES Ingredient(Ingrdt_ID),
	FOREIGN KEY(Brch_ID) REFERENCES Branch(Brch_ID)
);

CREATE TABLE Delivery (
	Dlv_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Stck_ID INT(5) NOT NULL,
	Dlv_Amount INT(5) NOT NULL,
    	Dlv_Received INT(1) NOT NULL,
    	Dlv_Cost INT(5) NOT NULL,
	PRIMARY KEY(Dlv_ID),
	FOREIGN KEY(Stck_ID) REFERENCES Stock(Stck_ID)
);

CREATE TABLE Customer (
	Cust_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Cust_FName VARCHAR(100)NOT NULL,
	Cust_LName VARCHAR(100)NOT NULL,
	Cust_Addr VARCHAR(100)NOT NULL,
	PRIMARY KEY(Cust_ID)
);

CREATE TABLE Seating(
	Seat_ID INT(5) NOT NULL,
    	Brch_ID INT(5) NOT NULL,
    	Seat_Capacity INT(5) NOT NULL,
    	PRIMARY KEY(Seat_ID, Brch_ID),
    	FOREIGN KEY(Brch_ID) REFERENCES Branch(Brch_ID)
	ON DELETE CASCADE # should delete seatings when the branch is deleted
);

CREATE TABLE Bill (
	Bill_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Brch_ID INT(5) NOT NULL,
	Bill_Total INT(5) NOT NULL,
    	Bill_State VARCHAR(100) NOT NULL,
    	Bill_Date DATETIME NOT NULL,
	PRIMARY KEY(Bill_ID),
	FOREIGN KEY(Brch_ID) REFERENCES Branch(Brch_ID)
);

CREATE TABLE Bill_Detail (
	BillDet_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Item_ID INT(5) NOT NULL,
    	Bill_ID INT(5) NOT NULL,
	BillDet_Count INT(5) NOT NULL,
    	BillDet_State VARCHAR(100) NOT NULL,
	PRIMARY KEY(BillDet_ID),
	FOREIGN KEY(Item_ID) REFERENCES Menu_Item(Item_ID),
    	FOREIGN KEY(Bill_ID) REFERENCES Bill(Bill_ID)
);

CREATE TABLE Online_Bill (
	OnBill_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Cust_ID INT(5) NOT NULL,
	Cook_ID INT(5) NOT NULL,
   	Bill_ID INT(5) NOT NULL,
	PRIMARY KEY(OnBill_ID),
	FOREIGN KEY(Cust_ID) REFERENCES Customer(Cust_ID),
	FOREIGN KEY(Cook_ID) REFERENCES Employee(Emp_ID),
   	FOREIGN KEY(Bill_ID) REFERENCES Bill(Bill_ID)
);

CREATE TABLE Instore_Bill (
	InBill_ID INT(5) NOT NULL UNIQUE AUTO_INCREMENT,
	Attend_ID INT(5) NOT NULL,
    	Seat_ID INT(5) NOT NULL,
	Cook_ID INT(5) NOT NULL,
    	Bill_ID INT(5) NOT NULL,
    	Brch_ID INT(5) NOT NULL,
	PRIMARY KEY(InBill_ID),
	FOREIGN KEY(Bill_ID) REFERENCES Bill(Bill_ID),
	FOREIGN KEY(Cook_ID) REFERENCES Employee(Emp_ID),
    	FOREIGN KEY(Attend_ID) REFERENCES Employee(Emp_ID),
    	FOREIGN KEY(Seat_ID,Brch_ID) REFERENCES Seating(Seat_ID,Brch_ID)
);




